damageCalc design

__List of objects and their methods

=> pokemonBattle : central object, gets the battle information from the UI and calculates the damage
-- getResults : getter for _results.
-- calcResults : utilizes the _stats' data to generate the results.

=> calculatorModel : encapsulates everything about calculation
-- calcMinDamage (stats)
-- calcMaxDamage (stats)
-- damagePercentage (hp, damage)

=> interfaceView : handles output to the screen
-- showResultsOnUI (???)

=> battleModifiers : encapsulates parsing and intermediary modifiers
-- parseStab (stab)
-- parseEffectiveness (effect)
-- parseStatModifier (statModifier)
-- getFirstModifier
-- getSecondModifier
-- getThirdModifier

=> validator : performs form validation
-- validateStats (stats)

---o---

__Objects used to transport data

=> stats : all the information from the UI is stored here; supports default values
atk
atkModifier
def
defModifier
hp
basePower
stab
effect
isBurn
isReflectLightScreen
isDoubleBattle
isSunnyDayRainDanceActive
isFlashFireActive
equipLifeOrb
...

==> CRIAR NOVO OBJETO QUE GUARDA OS VALORES USADOS PELA FORMULA DE DANO, PRONTOS PARA USO
(baseado no stats)

mod1
mod2
mod3


=> results : you'll find the calculation results in here, coupled with percentages (if applicable)